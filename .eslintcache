[{"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\index.tsx":"1","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\reportWebVitals.ts":"2","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\App.tsx":"3","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\monthSwitcher\\MonthSwitcher.tsx":"4","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\calendarTable\\calendarTable.tsx":"5","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\calendarTable\\CalendarTable.tsx":"6","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\modalForm\\ModalForm.tsx":"7","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\services\\data.ts":"8","C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\team\\Team.tsx":"9"},{"size":177,"mtime":1610041138104,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2064,"mtime":1610093795923,"results":"13","hashOfConfig":"11"},{"size":763,"mtime":1610093439788,"results":"14","hashOfConfig":"11"},{"size":2170,"mtime":1610051985343,"results":"15","hashOfConfig":"11"},{"size":2742,"mtime":1610101364220,"results":"16","hashOfConfig":"11"},{"size":4685,"mtime":1610091486265,"results":"17","hashOfConfig":"11"},{"size":3599,"mtime":1610092079702,"results":"18","hashOfConfig":"11"},{"size":1793,"mtime":1610101826271,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1pos2hg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\index.tsx",[],["40","41"],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\reportWebVitals.ts",[],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\App.tsx",[],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\monthSwitcher\\MonthSwitcher.tsx",[],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\calendarTable\\calendarTable.tsx",[],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\calendarTable\\CalendarTable.tsx",[],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\modalForm\\ModalForm.tsx",[],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\services\\data.ts",[],"C:\\Users\\Sakharov92\\Desktop\\react-calendar\\src\\components\\team\\Team.tsx",["42"],"import React, {useEffect, useState} from \"react\";\r\nimport './Team.css';\r\nimport {ITeam} from \"../../Interfaces/team\";\r\nimport {Data} from \"../../Interfaces/data\"\r\n\r\n\r\nexport const Team: React.FC<{ team: ITeam, date: Date, dataList: Data }> = ({team, date, dataList}) => {\r\n    const [daysArray, setDaysArray] = useState([].constructor(date.getDate()))\r\n    useEffect(() => {\r\n        setDaysArray([].constructor(date.getDate()).fill(\"\"));\r\n    }, [date])\r\n    console.log(dataList.users)\r\n\r\n    return (<tbody>\r\n        <tr className=\"mainRow\">\r\n            <td className=\"teamInfo\">\r\n                <div className=\"teamInfo__wrapper\">\r\n                    <p className=\"teamInfo__name\">{team.name}</p>\r\n                    <div className=\"teamInfo__block\">\r\n                        <i className=\"fas fa-users\"/>\r\n                        <span>{team.percentageOfAbsent[date.getMonth()]}%</span>\r\n                        <div className=\"percent\">{}</div>\r\n                        <button>\r\n                            <i className=\"fas chevronBtn fa-chevron-up\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            {daysArray.map((e: string, index: number) => <td key={\"\" + new Date() + index}/>)}\r\n            <td className=\"teamInfo\"/>\r\n        </tr>\r\n        {\r\n            dataList.users.map((user, index) => {\r\n                if (user.teamId === team.id) {\r\n                    return (<tr>\r\n                            <td>{user.name}</td>\r\n                            {daysArray.map((e: string, index: number) => <td key={\"\" + new Date() + index}/>)}\r\n                            <td/>\r\n                        </tr>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n        </tbody>\r\n    )\r\n}\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":33,"column":46,"nodeType":"49","messageId":"50","endLine":33,"endColumn":48},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]